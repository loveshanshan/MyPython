python 类中找上级类py2与py3的不同
py2 是根据深度算法（一条道走到黑，从左边开始查找）
py3 是根据c3算法
1， 先找出最底层类的所有父类（c1,c2,c3）
2， 取最左c1 (最底层父类只剩下c2,c3)     当前已取c1
3,    查c1的父类 b1， b1的子类中包含c2 , 刚取c2, 当前已取c1, c2
4,    c1上面没有




r"""
       O
   /    |     \
A1  A2  A3
  |  /  |  \   |
  |/    |    \ |
B1  B2  B3
  |  \  |  \   |  
  |    \|    \ |
C1  C2  C3
   \    |    /
        D
"""

class A1: pass
class A2: pass
class A3: pass

class B1(A1):pass
class B2(A2):pass
class B3(A2,A3):pass

class C1(B1):pass
class C2(B1, B2):pass
class C3(B2):pass

class D(C1, C2, C3):pass

print(*D.__mro__, sep='\n')
